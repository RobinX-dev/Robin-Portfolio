{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables); // Register Chart.js modules\nexport let AboutComponent = class AboutComponent {\n  constructor() {\n    // Data for the charts\n    this.chartData = [{\n      id: 'beChart',\n      label: 'Bachelor of Engineering',\n      percentage: 78\n    }, {\n      id: 'hscChart',\n      label: 'Higher Secondary Certificate',\n      percentage: 80\n    }, {\n      id: 'sslcChart',\n      label: 'Secondary School Leaving Certificate',\n      percentage: 93.6\n    }];\n    this.ugPercentage = this.chartData[0].percentage;\n    this.twelthPercentage = this.chartData[1].percentage;\n    this.tenthPercentage = this.chartData[2].percentage;\n  }\n  ngAfterViewInit() {\n    // Iterate over the chartData array to create multiple charts\n    this.chartData.forEach(data => {\n      this.createDonutChart(data.id, data.label, data.percentage);\n    });\n  }\n  createDonutChart(elementId, label, percentage) {\n    const ctx = document.getElementById(elementId);\n    new Chart(ctx.getContext('2d'), {\n      type: 'doughnut',\n      data: {\n        labels: ['Achieved', 'Remaining'],\n        datasets: [{\n          label: label,\n          data: [percentage, 100 - percentage],\n          backgroundColor: ['rgba(75, 192, 192, 0.7)', 'rgba(192, 192, 192, 0.5)'],\n          borderColor: ['rgba(75, 192, 192, 1)', 'rgba(192, 192, 192, 1)'],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'bottom'\n          },\n          tooltip: {\n            callbacks: {\n              label: context => `${context.label}: ${context.raw}%`\n            }\n          }\n        }\n      }\n    });\n  }\n};\nAboutComponent = __decorate([Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})], AboutComponent);","map":{"version":3,"names":["Component","Chart","registerables","register","AboutComponent","constructor","chartData","id","label","percentage","ugPercentage","twelthPercentage","tenthPercentage","ngAfterViewInit","forEach","data","createDonutChart","elementId","ctx","document","getElementById","getContext","type","labels","datasets","backgroundColor","borderColor","borderWidth","options","responsive","plugins","legend","position","tooltip","callbacks","context","raw","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/robin/Desktop/Github/Robin-Portfolio/src/app/about/about.component.ts"],"sourcesContent":["import { Component, AfterViewInit } from '@angular/core';\nimport { Chart, registerables } from 'chart.js';\n\nChart.register(...registerables); // Register Chart.js modules\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css'],\n})\nexport class AboutComponent implements AfterViewInit {\n  // Data for the charts\n  chartData = [\n    { id: 'beChart', label: 'Bachelor of Engineering', percentage: 78 },\n    { id: 'hscChart', label: 'Higher Secondary Certificate', percentage: 80 },\n    { id: 'sslcChart', label: 'Secondary School Leaving Certificate', percentage: 93.6 },\n  ];\n\n  ugPercentage = this.chartData[0].percentage;\n  twelthPercentage = this.chartData[1].percentage;\n  tenthPercentage = this.chartData[2].percentage;\n\n  ngAfterViewInit(): void {\n    // Iterate over the chartData array to create multiple charts\n    this.chartData.forEach((data) => {\n      this.createDonutChart(data.id, data.label, data.percentage);\n    });\n  }\n\n  private createDonutChart(elementId: string, label: string, percentage: number): void {\n    const ctx = document.getElementById(elementId) as HTMLCanvasElement;\n\n    new Chart(ctx.getContext('2d')!, {\n      type: 'doughnut',\n      data: {\n        labels: ['Achieved', 'Remaining'],\n        datasets: [\n          {\n            label: label,\n            data: [percentage, 100 - percentage],\n            backgroundColor: ['rgba(75, 192, 192, 0.7)', 'rgba(192, 192, 192, 0.5)'],\n            borderColor: ['rgba(75, 192, 192, 1)', 'rgba(192, 192, 192, 1)'],\n            borderWidth: 1,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'bottom',\n          },\n          tooltip: {\n            callbacks: {\n              label: (context) => `${context.label}: ${context.raw}%`,\n            },\n          },\n        },\n      },\n    });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAuB,eAAe;AACxD,SAASC,KAAK,EAAEC,aAAa,QAAQ,UAAU;AAE/CD,KAAK,CAACE,QAAQ,CAAC,GAAGD,aAAa,CAAC,CAAC,CAAC;AAO3B,WAAME,cAAc,GAApB,MAAMA,cAAc;EAApBC,YAAA;IACL;IACA,KAAAC,SAAS,GAAG,CACV;MAAEC,EAAE,EAAE,SAAS;MAAEC,KAAK,EAAE,yBAAyB;MAAEC,UAAU,EAAE;IAAE,CAAE,EACnE;MAAEF,EAAE,EAAE,UAAU;MAAEC,KAAK,EAAE,8BAA8B;MAAEC,UAAU,EAAE;IAAE,CAAE,EACzE;MAAEF,EAAE,EAAE,WAAW;MAAEC,KAAK,EAAE,sCAAsC;MAAEC,UAAU,EAAE;IAAI,CAAE,CACrF;IAED,KAAAC,YAAY,GAAG,IAAI,CAACJ,SAAS,CAAC,CAAC,CAAC,CAACG,UAAU;IAC3C,KAAAE,gBAAgB,GAAG,IAAI,CAACL,SAAS,CAAC,CAAC,CAAC,CAACG,UAAU;IAC/C,KAAAG,eAAe,GAAG,IAAI,CAACN,SAAS,CAAC,CAAC,CAAC,CAACG,UAAU;EAyChD;EAvCEI,eAAeA,CAAA;IACb;IACA,IAAI,CAACP,SAAS,CAACQ,OAAO,CAAEC,IAAI,IAAI;MAC9B,IAAI,CAACC,gBAAgB,CAACD,IAAI,CAACR,EAAE,EAAEQ,IAAI,CAACP,KAAK,EAAEO,IAAI,CAACN,UAAU,CAAC;IAC7D,CAAC,CAAC;EACJ;EAEQO,gBAAgBA,CAACC,SAAiB,EAAET,KAAa,EAAEC,UAAkB;IAC3E,MAAMS,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAACH,SAAS,CAAsB;IAEnE,IAAIhB,KAAK,CAACiB,GAAG,CAACG,UAAU,CAAC,IAAI,CAAE,EAAE;MAC/BC,IAAI,EAAE,UAAU;MAChBP,IAAI,EAAE;QACJQ,MAAM,EAAE,CAAC,UAAU,EAAE,WAAW,CAAC;QACjCC,QAAQ,EAAE,CACR;UACEhB,KAAK,EAAEA,KAAK;UACZO,IAAI,EAAE,CAACN,UAAU,EAAE,GAAG,GAAGA,UAAU,CAAC;UACpCgB,eAAe,EAAE,CAAC,yBAAyB,EAAE,0BAA0B,CAAC;UACxEC,WAAW,EAAE,CAAC,uBAAuB,EAAE,wBAAwB,CAAC;UAChEC,WAAW,EAAE;SACd;OAEJ;MACDC,OAAO,EAAE;QACPC,UAAU,EAAE,IAAI;QAChBC,OAAO,EAAE;UACPC,MAAM,EAAE;YACNC,QAAQ,EAAE;WACX;UACDC,OAAO,EAAE;YACPC,SAAS,EAAE;cACT1B,KAAK,EAAG2B,OAAO,IAAK,GAAGA,OAAO,CAAC3B,KAAK,KAAK2B,OAAO,CAACC,GAAG;;;;;KAK7D,CAAC;EACJ;CACD;AAnDYhC,cAAc,GAAAiC,UAAA,EAL1BrC,SAAS,CAAC;EACTsC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWpC,cAAc,CAmD1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}